{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/data/env/server.ts"],"sourcesContent":["import { createEnv } from \"@t3-oss/env-nextjs\";\r\nimport { z } from \"zod\";\r\n\r\nexport const env = createEnv({\r\n  server: {\r\n    ARCJET_KEY: z.string().min(1),\r\n    CLERK_SECRET_KEY: z.string().min(1),\r\n  },\r\n  emptyStringAsUndefined: true,\r\n  experimental__runtimeEnv: process.env,\r\n});\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,MAAM,IAAA,kLAAS,EAAC;IAC3B,QAAQ;QACN,YAAY,+KAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QAC3B,kBAAkB,+KAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IACnC;IACA,wBAAwB;IACxB,0BAA0B,QAAQ,GAAG;AACvC"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import arcjet, { detectBot, shield, slidingWindow } from \"@arcjet/next\";\r\nimport { clerkMiddleware, createRouteMatcher } from \"@clerk/nextjs/server\";\r\nimport { env } from \"./data/env/server\";\r\n\r\nconst isPublicRoute = createRouteMatcher([\"/sign-in(.*)\", \"/\"]);\r\n\r\nconst aj = arcjet({\r\n  key: env.ARCJET_KEY,\r\n\r\n  rules: [\r\n    shield({ mode: \"LIVE\" }),\r\n    detectBot({\r\n      mode: \"LIVE\",\r\n      allow: [\"CATEGORY:SEARCH_ENGINE\", \"CATEGORY:MONITOR\", \"CATEGORY:PREVIEW\"],\r\n    }),\r\n    slidingWindow({\r\n      mode: \"LIVE\",\r\n      interval: \"1h\",\r\n      max: 100,\r\n    }),\r\n  ],\r\n});\r\n\r\nexport default clerkMiddleware(async (auth, req) => {\r\n  const decision = await aj.protect(req);\r\n  if (decision.isDenied()) {\r\n    return new Response(null, { status: 403 });\r\n  }\r\n\r\n  if (!isPublicRoute(req)) {\r\n    await auth.protect();\r\n  }\r\n});\r\n\r\nexport const config = {\r\n  matcher: [\r\n    // Skip Next.js internals and all static files, unless found in search params\r\n    \"/((?!_next|[^?]*\\\\.(?:html?|css|js(?!on)|jpe?g|webp|png|gif|svg|ttf|woff2?|ico|csv|docx?|xlsx?|zip|webmanifest)).*)\",\r\n    // Always run for API routes\r\n    \"/(api|trpc)(.*)\",\r\n  ],\r\n};\r\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AACA;AAAA;AACA;;;;;;;;;AAEA,MAAM,gBAAgB,IAAA,wMAAkB,EAAC;IAAC;IAAgB;CAAI;AAE9D,MAAM,KAAK,IAAA,4KAAM,EAAC;IAChB,KAAK,2IAAG,CAAC,UAAU;IAEnB,OAAO;QACL,IAAA,iJAAM,EAAC;YAAE,MAAM;QAAO;QACtB,IAAA,oJAAS,EAAC;YACR,MAAM;YACN,OAAO;gBAAC;gBAA0B;gBAAoB;aAAmB;QAC3E;QACA,IAAA,wJAAa,EAAC;YACZ,MAAM;YACN,UAAU;YACV,KAAK;QACP;KACD;AACH;uCAEe,IAAA,wMAAe,EAAC,OAAO,MAAM;IAC1C,MAAM,WAAW,MAAM,GAAG,OAAO,CAAC;IAClC,IAAI,SAAS,QAAQ,IAAI;QACvB,OAAO,IAAI,SAAS,MAAM;YAAE,QAAQ;QAAI;IAC1C;IAEA,IAAI,CAAC,cAAc,MAAM;QACvB,MAAM,KAAK,OAAO;IACpB;AACF;AAEO,MAAM,SAAS;IACpB,SAAS;QACP,6EAA6E;QAC7E;QACA,4BAA4B;QAC5B;KACD;AACH"}}]
}